"""initial migration

Revision ID: 7ab9ea98fb55
Revises: 
Create Date: 2025-05-11 21:11:10.529140

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7ab9ea98fb55'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currencies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('symbol', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('faqs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question', sa.VARCHAR(), nullable=False),
    sa.Column('answer', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('passwordresetotp',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=6), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('currency', sa.VARCHAR(), nullable=False),
    sa.Column('rate', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_rate', 'rates', ['rate'], unique=False)
    op.create_index(op.f('ix_rates_currency'), 'rates', ['currency'], unique=False)
    op.create_table('tokenblacklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokenblacklist_token'), 'tokenblacklist', ['token'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.VARCHAR(), nullable=True),
    sa.Column('phone', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('country', sa.VARCHAR(), nullable=False),
    sa.Column('hash_password', sa.VARCHAR(), nullable=False),
    sa.Column('role', sa.VARCHAR(), nullable=False),
    sa.Column('profile_picture_url', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('pin_hash', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('countries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('code_iso', sa.VARCHAR(length=2), nullable=False),
    sa.Column('currency_id', sa.Uuid(), nullable=False),
    sa.Column('dial_code', sa.VARCHAR(length=4), nullable=True),
    sa.Column('phone_pattern', sa.VARCHAR(), nullable=True),
    sa.Column('can_send', sa.BOOLEAN(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code_iso'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ex_rates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('from_currency_id', sa.Uuid(), nullable=False),
    sa.Column('to_currency_id', sa.Uuid(), nullable=False),
    sa.Column('rate', sa.DECIMAL(), nullable=False),
    sa.ForeignKeyConstraint(['from_currency_id'], ['currencies.id'], ),
    sa.ForeignKeyConstraint(['to_currency_id'], ['currencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('from_currency_id', 'to_currency_id', name='unique_currency_pair')
    )
    op.create_index('idx_from_to_currency', 'ex_rates', ['from_currency_id', 'to_currency_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('reference', sa.VARCHAR(length=12), nullable=True),
    sa.Column('sender_id', sa.Uuid(), nullable=False),
    sa.Column('sender_country', sa.VARCHAR(length=50), nullable=False),
    sa.Column('sender_currency', sa.VARCHAR(length=10), nullable=False),
    sa.Column('sender_amount', sa.INTEGER(), nullable=True),
    sa.Column('receiver_country', sa.VARCHAR(length=50), nullable=True),
    sa.Column('receiver_currency', sa.VARCHAR(length=10), nullable=True),
    sa.Column('receiver_amount', sa.INTEGER(), nullable=True),
    sa.Column('conversion_rate', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('payment_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('recipient_name', sa.VARCHAR(length=50), nullable=True),
    sa.Column('recipient_phone', sa.VARCHAR(length=50), nullable=True),
    sa.Column('recipient_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('include_fee', sa.BOOLEAN(), nullable=True),
    sa.Column('is_hidden', sa.BOOLEAN(), nullable=True),
    sa.Column('fee_amount', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference')
    )
    op.create_index('idx_transaction_status', 'transactions', ['status'], unique=False)
    op.create_table('fees',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('from_country_id', sa.Uuid(), nullable=False),
    sa.Column('to_country_id', sa.Uuid(), nullable=False),
    sa.Column('fee', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['from_country_id'], ['countries.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_country_id'], ['countries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_from_to', 'fees', ['from_country_id', 'to_country_id'], unique=False)
    op.create_table('payment_type',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('owner_full_name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), nullable=True),
    sa.Column('account_number', sa.VARCHAR(length=20), nullable=True),
    sa.Column('country_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_payment_type', 'payment_type', ['type'], unique=False)
    op.create_table('receiving_type',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type', sa.VARCHAR(), nullable=False),
    sa.Column('country_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_receiving_type', 'receiving_type', ['type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_receiving_type', table_name='receiving_type')
    op.drop_table('receiving_type')
    op.drop_index('idx_payment_type', table_name='payment_type')
    op.drop_table('payment_type')
    op.drop_index('idx_from_to', table_name='fees')
    op.drop_table('fees')
    op.drop_index('idx_transaction_status', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index('idx_from_to_currency', table_name='ex_rates')
    op.drop_table('ex_rates')
    op.drop_table('countries')
    op.drop_table('users')
    op.drop_index(op.f('ix_tokenblacklist_token'), table_name='tokenblacklist')
    op.drop_table('tokenblacklist')
    op.drop_index(op.f('ix_rates_currency'), table_name='rates')
    op.drop_index('idx_rate', table_name='rates')
    op.drop_table('rates')
    op.drop_table('passwordresetotp')
    op.drop_table('faqs')
    op.drop_table('currencies')
    # ### end Alembic commands ###
